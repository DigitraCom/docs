"use strict";(self.webpackChunktest_website=self.webpackChunktest_website||[]).push([[394],{20737:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>g,frontMatter:()=>i,metadata:()=>s,toc:()=>d});var n=a(58168),r=(a(96540),a(15680));const i={tags:["rest"]},l=void 0,s={unversionedId:"rest/General",id:"rest/General",title:"General",description:"Overview",source:"@site/docs/rest/General.md",sourceDirName:"rest",slug:"/rest/General",permalink:"/docs/rest/General",draft:!1,tags:[{label:"rest",permalink:"/docs/tags/rest"}],version:"current",frontMatter:{tags:["rest"]},sidebar:"tutorialSidebar",previous:{title:"REST",permalink:"/docs/category/rest"},next:{title:"Markets",permalink:"/docs/category/markets"}},o={},d=[{value:"Overview",id:"overview",level:2},{value:"Authentication",id:"authentication",level:2},{value:"REST Patterns and Conventions",id:"rest-patterns-and-conventions",level:2},{value:"Case",id:"case",level:3},{value:"Data types",id:"data-types",level:3},{value:"Headers",id:"headers",level:3},{value:"HTTP methods behavior",id:"http-methods-behavior",level:3},{value:"HTTP status codes",id:"http-status-codes",level:3},{value:"Rate limit",id:"rate-limit",level:3},{value:"Body structure",id:"body-structure",level:3},{value:"Errors",id:"errors",level:3},{value:"&#39;expand&#39; query string",id:"expand-query-string",level:3},{value:"Timestamp query strings",id:"timestamp-query-strings",level:3},{value:"Pagination",id:"pagination",level:3},{value:"Changelog",id:"changelog",level:2},{value:"2023-11-27",id:"2023-11-27",level:3},{value:"2023-04-24",id:"2023-04-24",level:3},{value:"2023-02-10",id:"2023-02-10",level:3}],p={toc:d},u="wrapper";function g(e){let{components:t,...a}=e;return(0,r.yg)(u,(0,n.A)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h2",{id:"overview"},"Overview"),(0,r.yg)("p",null,"The Representational State Transfer (REST) API is a software architectural style that defines a set of constraints to be used for creating web services. It allows different software systems to communicate with each other over HTTP, just like how web browsers communicate with web servers. At Digitra.com, we utilize REST API to deliver our services. This means that you can interact with our platform programmatically, accessing and manipulating Digitra.com's functions as resources via standard HTTP methods. This makes our services widely accessible across different programming languages and platforms."),(0,r.yg)("p",null,"Before diving into the specifics of the Digitra.com REST API, it's important to have a basic understanding of REST API concepts. This includes knowledge of HTTP methods, status codes, endpoints, request/response structures, and more. While we won't be covering these foundational concepts in this documentation, there are many resources available online to help you get up to speed."),(0,r.yg)("p",null,"In this documentation, we will focus solely on the specifics of the Digitra.com REST API. We'll provide detailed information about our endpoints, request parameters, response formats, and examples to help you effectively interact with our services. By following this guide, you'll be able to leverage the full potential of Digitra.com's functions programmatically."),(0,r.yg)("p",null,"Server URL: ",(0,r.yg)("inlineCode",{parentName:"p"},"https://api.digitra.com")),(0,r.yg)("hr",null),(0,r.yg)("h2",{id:"authentication"},"Authentication"),(0,r.yg)("p",null,"In all authenticated required endpoint the request need to be signed by HMAC algorithm using your API credentials."),(0,r.yg)("p",null,"To create API credentials, you need to have an verified account, created by Digitra.com mobile app and access your profile page at Digitra.com web application."),(0,r.yg)("p",null,"An API credential is formed by a API key and a client secret. "),(0,r.yg)("p",null,"The authorization consists of sending these 3 headers:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"digitra-api-key"),': "<your_api_key>" used to identify you;'),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"digitra-timestamp"),": the current timestamp ",(0,r.yg)("em",{parentName:"li"},"(see Timestamps Date Type)")," used to time out old requests; "),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"digitra-signature"),": used to ensure that the request was generated by the credential holder. It is generated by SHA256 HMAC of a inline concatenation of request parts:",(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"The ",(0,r.yg)("inlineCode",{parentName:"li"},"digitra-timestamp")," header value;"),(0,r.yg)("li",{parentName:"ul"},"HTTP method in upper case;"),(0,r.yg)("li",{parentName:"ul"},"The request path (leading slash + path without host + query strings);"),(0,r.yg)("li",{parentName:"ul"},"The JSON body (when present) encoded in a single line, without line breakers and single spaced;  ")))),(0,r.yg)("p",null,"The code below, in Python, and the output can help you to implement these headers:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-python"},'import time\nimport hmac\nimport json\nfrom requests import Request\n\nrequest = Request(\n    method="POST",\n    url="https://api.digitra.com/v1/some-endpoint",\n    data=json.dumps({"key1": "value1", "key2": 123.45, "key3": False}),\n    params={"q_key1": "value1", "q_key2": 123.45, "q_key3": False},\n)\n\nsecret = "<your_api_client_secret>".encode()\nprepared_req = request.prepare()\ntimestamp = str(int(time.time() * 1000000))\n\noptional_body = prepared_req.body if prepared_req.body else ""\nsignature_payload = f"{timestamp}{prepared_req.method}{prepared_req.path_url}{optional_body}".encode()\nsignature = hmac.new(secret, signature_payload, "sha256").hexdigest()\n\nrequest.headers["digitra-api-key"] = "<your_api_key>"\nrequest.headers["digitra-timestamp"] = timestamp\nrequest.headers["digitra-signature"] = signature\n\nprint(signature_payload.decode())\nprint(request.headers)\n')),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-output"},"'1676040464591112POST/v1/some-endpoint?q_key1=value1&q_key2=123.45&q_key3=False{\"key1\": \"value1\", \"key2\": 123.45, \"key3\": false}'\n{'digitra-api-key': '<your_api_key>', 'digitra-timestamp': '1676040464591112', 'digitra-signature': 'a7ecc22546b496fb2c6c48e253dec2a1a0a4a497553e023aa4244b1f29b5f9f5'}\n")),(0,r.yg)("p",null,"Based on what was explained above, using Python with a more didactic-focused code, an order creation could be done like this:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-python"},'import time\nimport hmac\nimport json\nimport requests\n\n# Define a create order request by following the endpoint definition in this documentation and set the API key header.\nrequest = requests.Request(\n    method="POST",\n    url="https://api.digitra.com/v1/trade/orders",\n    data=json.dumps(\n        {\n            "market": "BTC-USD",\n            "side": "BUY",\n            "type": "MARKET",\n            "time_in_force": "FOK",\n            "size": "0.00001",\n        }\n    ),\n    headers={\n        "content-type": "application/json",\n        "digitra-api-key": "a92977146953450a889ad20e7a148c60",\n    },\n)\n\n# Prepare the request to be able to use the properties as they will be sent.\nprepared_req = request.prepare()\n\n# Define the secret key in bytes.\nsecret = "ek85VGlhMlFUOF9LQUxqNW16RDFfR2hETk5rWFlPQjlVQVcxUFlZTGpvdF9BVUZBLURMTkNMcllCaU5QSEIwRHFvM3dwVDMxV3IxWmYwLVloVzdaQlE9PQ".encode()\n\n# Define the timestamp in microseconds.\ntimestamp = str(int(time.time() * 1000000))\n\n# If the request has a body, use it. Otherwise, use an empty string.\noptional_body = prepared_req.body if prepared_req.body else ""\n\n# Define the signature payload.\nsignature_payload = f"{timestamp}{prepared_req.method}{prepared_req.path_url}{optional_body}".encode()\n\n# Sign the payload with the secret key.\nsignature = hmac.new(secret, signature_payload, "sha256").hexdigest()\n\n# Define the timestamp and signature headers\nrequest.headers["digitra-timestamp"] = timestamp\nrequest.headers["digitra-signature"] = signature\n\n# Re-prepare the request, now with the timestamp and signature headers.\nprepared_req = request.prepare()\n\n# Send the request.\nsession = requests.Session()\nresponse = session.send(prepared_req)\n\nprint(signature_payload.decode())\nprint(request.headers)\nprint(response.content)\n')),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-output"},'1680287517023288POST/v1/trade/orders{"market": "BTC-USD", "side": "BUY", "type": "MARKET", "time_in_force": "FOK", "size": "0.00001"}\n\n{\'content-type\': \'application/json\', \'digitra-api-key\': \'a92977146953450a889ad20e7a148c60\', \'digitra-timestamp\': \'1680287517023288\', \'digitra-signature\': \'18d72aecb2c33c53641dc11a5d99c40d309180ce59f20e0659095f0a8c372061\'}\n\nb\'{"result":{"id":"454256407080894349","market":"BTC-USD","side":"BUY","type":"MARKET","status":"SUBMITTING","time_in_force":"FOK","price":"31240","size":"0.00001","fee":"0","filled":"0","filled_weighted_price":"0","custom_id":"","created_at":1680287517823554,"updated_at":1680287517937525}}\'\n')),(0,r.yg)("p",null,"With valid credentials and valid signature, your request will be processed successfully. If any inconsistence happens, the requested endpoind will raise a HTTP 401 Unauthorized response."),(0,r.yg)("p",null,"These inconsistences could be:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Invalid or deleted API Key;"),(0,r.yg)("li",{parentName:"ul"},"Invalid secret;"),(0,r.yg)("li",{parentName:"ul"},"Request content incompatible with signature sent;"),(0,r.yg)("li",{parentName:"ul"},"A slow request with an old timestamp;"),(0,r.yg)("li",{parentName:"ul"},"Algorithm problems when generating the string concatenation with the parts of the request: bars, line breaks, spacing, parameter order, querystrings format, body format etc.")),(0,r.yg)("sub",null,"*alternative keywords:* *`x-api-key`* *`oauth`* *`authorization`* *`login`* "),(0,r.yg)("hr",null),(0,r.yg)("h2",{id:"rest-patterns-and-conventions"},"REST Patterns and Conventions"),(0,r.yg)("p",null,"The API endpoints follows as much was possible the best market practices of RESTfull rules adoption. Some behaviors are well market knew conventions as the correct use of HTTP status codes and methods, other are Digitra.com's conventions. All of them are described here."),(0,r.yg)("h3",{id:"case"},"Case"),(0,r.yg)("p",null,"Static parts of URLs (whose texts do not represent path parameters) and headers are written in lowercase with hyphen as words separator."),(0,r.yg)("p",null,"Body fields, path parameters names and query strings names are written in lowercase with underscore as words separator."),(0,r.yg)("p",null,"Enum values are written in UPPER case with underscore as words separator."),(0,r.yg)("h3",{id:"data-types"},"Data types"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"),(0,r.yg)("th",{parentName:"tr",align:null},"Examples"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Big Decimal"),(0,r.yg)("td",{parentName:"tr",align:null},'Decimal values, typically representing quotes or financial volumes are represented as strings to ensure the correct expression of large values without risk of rounding caused by size limitations in different programming languages. The "." point is used as a decimal separator. It starts with minus sign "-" when the value is negative.'),(0,r.yg)("td",{parentName:"tr",align:null},'"5628963.145620056", "0.00018905711", "-3598.048056922"')),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Small Decimal"),(0,r.yg)("td",{parentName:"tr",align:null},"Decimal values with few integer or decimal digits are represented as number."),(0,r.yg)("td",{parentName:"tr",align:null},"0.5; 15.32; -2.5")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Timestamps"),(0,r.yg)("td",{parentName:"tr",align:null},"Timestamps are always handled in UTC, both in request fields and in responses. They are represented as integer numeric values in the Unix Epoch pattern (aka Unix Timestamp, Unix Time or POSIX Time) representing a time in microsseconds."),(0,r.yg)("td",{parentName:"tr",align:null},"1669401622935335")))),(0,r.yg)("p",null,"Timestamp generation example in Python:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-python"},'from datetime import datetime\n\nnow = datetime.now()\nto_timestamp = int(datetime.timestamp(now) * 1000000)\nfrom_timestamp = datetime.fromtimestamp(to_timestamp / 1000000, tz=None)\n\nprint("Current date and time:", now)\nprint("Unix Timestamp from date:", to_timestamp)\nprint("Date from Unix Timestamp:", from_timestamp)\n')),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-output"},"# Current date and time: 2022-11-25 18:40:22.935335\n# Unix Timestamp from date: 1669401622935335\n# Date from Unix Timestamp: 2022-11-25 18:40:22.935335\n")),(0,r.yg)("h3",{id:"headers"},"Headers"),(0,r.yg)("p",null,"Specific Digitra.com's headers begins with ",(0,r.yg)("inlineCode",{parentName:"p"},"digitra-"),". Ex: ",(0,r.yg)("inlineCode",{parentName:"p"},"digitra-api-key"),". Other common well known HTTP headers are used as originally concepted. Ex: ",(0,r.yg)("inlineCode",{parentName:"p"},"content-type"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"content-lenght"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"location")," etc."),(0,r.yg)("h3",{id:"http-methods-behavior"},"HTTP methods behavior"),(0,r.yg)("p",null,"When using HTTP Methods, the behaviors below are expected:"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Method"),(0,r.yg)("th",{parentName:"tr",align:null},"Action"),(0,r.yg)("th",{parentName:"tr",align:null},"Idempotent"),(0,r.yg)("th",{parentName:"tr",align:null},"Secure"),(0,r.yg)("th",{parentName:"tr",align:null},"Body on Request"),(0,r.yg)("th",{parentName:"tr",align:null},"Body in Successful Response"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"GET"),(0,r.yg)("td",{parentName:"tr",align:null},"Query"),(0,r.yg)("td",{parentName:"tr",align:null},"Yes"),(0,r.yg)("td",{parentName:"tr",align:null},"Yes"),(0,r.yg)("td",{parentName:"tr",align:null},"No"),(0,r.yg)("td",{parentName:"tr",align:null},"Yes")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"PUT"),(0,r.yg)("td",{parentName:"tr",align:null},"Replacement (or creation if none)"),(0,r.yg)("td",{parentName:"tr",align:null},"Yes"),(0,r.yg)("td",{parentName:"tr",align:null},"No"),(0,r.yg)("td",{parentName:"tr",align:null},"Optional"),(0,r.yg)("td",{parentName:"tr",align:null},"Optional")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"DELETE"),(0,r.yg)("td",{parentName:"tr",align:null},"Removal/Cancelation"),(0,r.yg)("td",{parentName:"tr",align:null},"Yes"),(0,r.yg)("td",{parentName:"tr",align:null},"No"),(0,r.yg)("td",{parentName:"tr",align:null},"Optional"),(0,r.yg)("td",{parentName:"tr",align:null},"Optional")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"POST"),(0,r.yg)("td",{parentName:"tr",align:null},"Creation"),(0,r.yg)("td",{parentName:"tr",align:null},"No"),(0,r.yg)("td",{parentName:"tr",align:null},"No"),(0,r.yg)("td",{parentName:"tr",align:null},"Optional"),(0,r.yg)("td",{parentName:"tr",align:null},"Optional")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"PATCH"),(0,r.yg)("td",{parentName:"tr",align:null},"Partial update, only the sent fields will be updated"),(0,r.yg)("td",{parentName:"tr",align:null},"Yes"),(0,r.yg)("td",{parentName:"tr",align:null},"No"),(0,r.yg)("td",{parentName:"tr",align:null},"Yes"),(0,r.yg)("td",{parentName:"tr",align:null},"Optional")))),(0,r.yg)("p",null,"The availability of these methods are defined in each endpoint documentation."),(0,r.yg)("h3",{id:"http-status-codes"},"HTTP status codes"),(0,r.yg)("p",null,"When receiving HTTP status codes, they corresponds to bellow meanings and can occurs on these methods:"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"HTTP Code"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"200 OK"),(0,r.yg)("td",{parentName:"tr",align:null},"Execution completed successfully.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"201 Created"),(0,r.yg)("td",{parentName:"tr",align:null},"New instance created.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"204 No Content"),(0,r.yg)("td",{parentName:"tr",align:null},"Execution completed successfully. There is no return payload.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"400 Bad Request"),(0,r.yg)("td",{parentName:"tr",align:null},"The request was badly formed (header, body, path parameter or query string) because mandatory fields not send, wrong types, non-existent properties etc.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"401 Unauthorized"),(0,r.yg)("td",{parentName:"tr",align:null},"Missing/invalid authentication header or invalid token.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"404 Not Found"),(0,r.yg)("td",{parentName:"tr",align:null},"The URL points to a resource or resource instance that does not exist.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"405 Method Not Allowed"),(0,r.yg)("td",{parentName:"tr",align:null},"The consumer tried to access the resource with an unsupported method.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"406 Not Acceptable"),(0,r.yg)("td",{parentName:"tr",align:null},"The value of the Accept header is not contained in the media types allowed by the API.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"415 Unsupported Media Type"),(0,r.yg)("td",{parentName:"tr",align:null},"The operation was refused because the payload is in a format not supported by the API.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"429 Too Many Requests"),(0,r.yg)("td",{parentName:"tr",align:null},"The operation was refused because too many requests were made within a certain period.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"500 Internal Server Error"),(0,r.yg)("td",{parentName:"tr",align:null},"An API error has occurred caused by internal problems.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"503 Service Unavailable"),(0,r.yg)("td",{parentName:"tr",align:null},"The service is currently unavailable. Try again later.")))),(0,r.yg)("h3",{id:"rate-limit"},"Rate limit"),(0,r.yg)("p",null,"To ensure fast transactions and better user experience, the access rate to REST API endpoints are limited to ",(0,r.yg)("strong",{parentName:"p"},"10 requests per-second"),", per API key, shared across all methods and API endpoints ."),(0,r.yg)("p",null,"Throttling rates are not hard limits and high global traffics (came from all clients) or from the same IP can reduce this expected rate limit. Individually hitting more than the \u2018requests per-second\u2019 defined above can cause automatic requests deny from server during a small time. Too many denies can cause API key deletion. So after check the problem in code causing excessive requests, a new one will need to be created. Your account can be blocked from API key creation in cases of successive recurrences by going beyond the defined limits. Yout IP can be blocked in case of too many requests hitting the limit coming from same IP."),(0,r.yg)("p",null,"When the request limit is reached, the API will response with a ",(0,r.yg)("inlineCode",{parentName:"p"},"429 Too Many Requests")," status code."),(0,r.yg)("sub",null,"*keywords:* *`#rate`* *`#limit`* *`#throttling`* *`#quota`* *`#tps`*"),(0,r.yg)("h3",{id:"body-structure"},"Body structure"),(0,r.yg)("p",null,"All endpoints returning single objects like the ones with id (ex: ",(0,r.yg)("inlineCode",{parentName:"p"},"/markets/{market_id}"),") will return the data into a property ",(0,r.yg)("inlineCode",{parentName:"p"},"result"),". Ex:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "result": {\n    "id": "BTC-USD",\n    "base_currency": "BTC",\n    ...\n  }\n}\n')),(0,r.yg)("p",null,"All endpoints returning array of objects like the ones without id (ex: ",(0,r.yg)("inlineCode",{parentName:"p"},"/markets"),") will return the data array into a property ",(0,r.yg)("inlineCode",{parentName:"p"},"result"),". Ex:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "result": [\n    {\n      "id": "BTC-USD",\n      "base_currency": "BTC",\n      ...\n    },\n    ...\n  ]\n}\n')),(0,r.yg)("p",null,"Outside the ",(0,r.yg)("inlineCode",{parentName:"p"},"result")," property will be metadata as pagination and links."),(0,r.yg)("h3",{id:"errors"},"Errors"),(0,r.yg)("p",null,"When a request is unsuccessful, an error response with a status code in the range of 400 due to client errors or in the range of 500 due to server errors may return a body detailing the error."),(0,r.yg)("p",null,"In cases of errors generated mainly from input field validations, the content may have one or all of the fields in the example below."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "errors":[\n    {\n      "field": "side",\n      "type": "type_error.enum",\n      "message": "value is not a valid enumeration member; permitted: \\\'SELL\\\', \\\'BUY\\\'",\n      "parameters": { "enum_values": ["SELL", "BUY"] }\n    }]\n}\n')),(0,r.yg)("p",null,"In cases of errors not related to any specific field, the error message is returned as follows."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "message": "Forbidden"\n}\n')),(0,r.yg)("p",null,"Meaning:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"field"),": the name of the field that has rised an error due a invalid value or that broke some business rule; can be a query string, path parameter, header or body field;"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"type"),": the error type in a systemic notation;"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"message"),": the error type described in English for a human reading;"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"parameters"),": a JSON object with specific parameters related with error message;")),(0,r.yg)("h3",{id:"expand-query-string"},"'expand' query string"),(0,r.yg)("p",null,"Request an extra content to be appended to response. This can be used to reduce the amount of requests when you want to return some resource with their nested sub-resources."),(0,r.yg)("p",null,"Example:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-json"},'Request: GET https://api.digitra.com/v1/markets\nResponse:\n{\n  "result": [\n    {"id": "AAVE-BRL", ...}, \n    {"id": "AAVE-USD",...}\n  ]\n}\n\nRequest: GET https://api.digitra.com/v1/markets/AAVE-BRL/prices\nResponse:\n{\n  "result": {"price": "266.4704", "bid": "278.4704", ...}\n}\n\nRequest: GET https://api.digitra.com/v1/markets/AAVE-USD/prices\nResponse:\n{\n  "result": {"price": "56.6748", "bid": "56.8532", ...}\n}\n\nRequest: GET https://api.digitra.com/v1/markets/?expand=PRICES\nResponse: \n{\n  "result": [ \n    {\n      "id": "AAVE-BRL", ...,\n      "prices": {"price": "266.4704", "bid":"278.3838", ...}\n    },\n    {\n      "id": "AAVE-USD", ..., \n      "prices": {"price": "56.6748", "bid": "56.8532", ...} \n    }\n  ] \n}\n')),(0,r.yg)("p",null,"It is necessary one key/value pair for each extra content. Ex: ",(0,r.yg)("inlineCode",{parentName:"p"},"?expand=CONTENT_1&expand=CONTENT_2")),(0,r.yg)("p",null,"The list of permitted sub-resource expanding is defined in each endpoint when this query string is present."),(0,r.yg)("h3",{id:"timestamp-query-strings"},"Timestamp query strings"),(0,r.yg)("p",null,"All timestamp query strings are documented indicating only its radical. But any timestamp query string can be incremented with the suffixes ",(0,r.yg)("inlineCode",{parentName:"p"},".gt")," (greater than), ",(0,r.yg)("inlineCode",{parentName:"p"},".gte")," (greater than or equal), ",(0,r.yg)("inlineCode",{parentName:"p"},".lt")," (less than) and ",(0,r.yg)("inlineCode",{parentName:"p"},".lte")," (lesser  than or equal). Thus, a query string defined in this documentation as 'time' can be used as:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"?time=1675902321123456")," to return objects with this exact timestamp"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"?time.gt=1675902321123456")," to return objects with a timestamp greater than this."),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"?time.gte=1675902321123456")," to return objects with a timestamp greater than or equal this."),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"?time.lt=1675902321123456")," to return objects with a timestamp lesser than this."),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"?time.lte=1675902321123456")," to return objects with a timestamp lesser than or equal this."),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"?time.gt=1675902321123456&time.lt=1675904369741852")," to return objects with a timestamp between these two values.")),(0,r.yg)("sub",null,"*keywords:* *`start_time`* *`end_time`* *`time`* *`timestamp`*"),(0,r.yg)("h3",{id:"pagination"},"Pagination"),(0,r.yg)("p",null,"When a request return more objects than a defined ",(0,r.yg)("inlineCode",{parentName:"p"},"limit")," query string or its default value, a ",(0,r.yg)("inlineCode",{parentName:"p"},"link"),".",(0,r.yg)("inlineCode",{parentName:"p"},"more_results")," will be returned with the relative url to access the next set of objects."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-json"},'{\n    "result": [...],\n    "links": {\n        "more_results": {\n            "method": "GET",\n            "href": "/v1/trade/orders?side=SELL&cursor=MTIzNDU2Nzg5&limit=20",\n        }\n    }\n}\n')),(0,r.yg)("p",null,"The amount of objects to be returned is set by ",(0,r.yg)("inlineCode",{parentName:"p"},"limit")," query string. The reference to get the next set of objects is defined by ",(0,r.yg)("inlineCode",{parentName:"p"},"cursor"),"querystring. For the sequence to be consistent, do not change the parameters present in this url."),(0,r.yg)("p",null,"The availability of ",(0,r.yg)("inlineCode",{parentName:"p"},"limit")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"cursor")," query strings are defined in each endpoint. In case of not re-defined in the endpoint documentation, the default ",(0,r.yg)("inlineCode",{parentName:"p"},"limit")," value will be 20 objects, max of 200."),(0,r.yg)("sub",null,"*keywords:* *`page`* *`page_size`* *`offset`* *`limit`* *`cursor`* *`pagination`*"),(0,r.yg)("h2",{id:"changelog"},"Changelog"),(0,r.yg)("h3",{id:"2023-11-27"},"2023-11-27"),(0,r.yg)("p",null,"Added ",(0,r.yg)("inlineCode",{parentName:"p"},"GET, POST /v1/withdrawals")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"GET /v1/withdrawals/{withdrawal_id}")," endpoints."),(0,r.yg)("h3",{id:"2023-04-24"},"2023-04-24"),(0,r.yg)("p",null,"Added ",(0,r.yg)("inlineCode",{parentName:"p"},"base_volume_24h"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"quote_volume_24h"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"high_24h"),",",(0,r.yg)("inlineCode",{parentName:"p"},"low_24h")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"price_change_percent_24h")," to ",(0,r.yg)("inlineCode",{parentName:"p"},"/v1/markets/{market_id}/prices")," endpoint."),(0,r.yg)("h3",{id:"2023-02-10"},"2023-02-10"),(0,r.yg)("p",null,"First release."))}g.isMDXComponent=!0}}]);